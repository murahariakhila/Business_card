package com.example.bussinesscard

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.Image
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.size
import androidx.compose.material3.BottomSheetDefaults
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.layout.ContentScale
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.bussinesscard.ui.theme.BussinesscardTheme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContent {
            BussinesscardTheme {
                Scaffold(modifier = Modifier.fillMaxSize()) { innerPadding ->
                    Greeting(
                        name = "Android",
                        modifier = Modifier.padding(innerPadding)
                    )
                }
            }
        }
    }
}

@Composable
fun Greeting(name: String, modifier: Modifier = Modifier) {
    Box(modifier = modifier.fillMaxSize()) {
        Image(
            painter = painterResource(R.drawable.email_24dp_e8eaed),
            contentDescription = null,
            contentScale = ContentScale.Fit,
            modifier = Modifier
                .fillMaxWidth()
                .height(400.dp)
                .padding(top = 200.dp)
        )
// Box for "FuLL NAME" text
        Box(
            modifier = Modifier
                .fillMaxSize()
                .padding(top = 90.dp)
        ) {
            Column(
                modifier = Modifier.align(Alignment.Center), // Center the Column
                horizontalAlignment = Alignment.CenterHorizontally
            ) {
                Text(
                    text = "MURAHARI AKHILA",
                    fontSize = 40.sp,
                    lineHeight = 50.sp,

                    )
                //email text...
                Text(
                    text = "EMAIL",
                    fontSize = 30.sp,
                )
            }
        }
                Column(
                    modifier = Modifier
                        .align(Alignment.BottomCenter) // Align at the bottom of the screen
                        .padding(16.dp)
                ){
                    Row(
                        verticalAlignment = Alignment.CenterVertically,
                        modifier = Modifier.padding(bottom = 16.dp)
                    ){
                        Image(
                            painter = painterResource(R.drawable.email_24dp_e8eaed),
                            contentDescription = "Phone Icon",
                            modifier = Modifier.size(40.dp)
                        )
                        Text(
                            text = "Phone: +123 456 7890",
                            fontSize = 20.sp,
                            modifier = Modifier.padding(start = 8.dp)
                        )
                    }
                    Row(
                        verticalAlignment = Alignment.CenterVertically,
                        modifier = Modifier.padding(bottom = 16.dp)
                    ) {
                        Image(
                            painter = painterResource(R.drawable.email_24dp_e8eaed),
                            contentDescription = "Email Icon",
                            modifier = Modifier.size(40.dp)
                        )
                        Text(
                            text = "Email: example@gmail.com",
                            fontSize = 20.sp,
                            modifier = Modifier.padding(start = 8.dp)
                        )
                    }

                    // Contact 3: Example with Location Icon
                    Row(
                        verticalAlignment = Alignment.CenterVertically
                    ) {
                        Image(
                            painter = painterResource(R.drawable.email_24dp_e8eaed),
                            contentDescription = "Location Icon",
                            modifier = Modifier.size(40.dp)
                        )
                        Text(
                            text = "Location: City, Country",
                            fontSize = 20.sp,
                            modifier = Modifier.padding(start = 8.dp)
                        )
                    }
                }
    }
}
    @Preview(showBackground = true)
    @Composable
    fun GreetingPreview() {
        BussinesscardTheme {
            Greeting("Android")
        }
    }
